# Generated by Django 4.2.7 on 2024-10-08 13:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('job_manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MicrobatchFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job_manager.workcenter')),
            ],
            options={
                'db_table': 'microbatch_flow',
            },
        ),
        migrations.CreateModel(
            name='MicrobatchRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('item_name', models.CharField(max_length=150)),
                ('batch_size', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job_manager.workcenter')),
            ],
            options={
                'db_table': 'microbatch_rule',
            },
        ),
        migrations.CreateModel(
            name='MicrobatchRuleCriteria',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('field', models.CharField(max_length=100)),
                ('operator', models.CharField(choices=[('equals', 'Equals'), ('contains', 'Contains'), ('starts_with', 'Starts With'), ('ends_with', 'Ends With'), ('gt', 'Greater Than'), ('lt', 'Less Than')], default='equals', max_length=20)),
                ('value', models.CharField(blank=True, max_length=254, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('microbatch_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria', to='microbatching.microbatchrule')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'microbatch_rule_criteria',
            },
        ),
        migrations.CreateModel(
            name='MicrobatchFlowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('size', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('current_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='current_flow_steps', to='microbatching.microbatchrule')),
                ('microbatch_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='microbatching.microbatchflow')),
                ('predecessor_rule', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='predecessor_flow_steps', to='microbatching.microbatchrule')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'microbatch_flow_step',
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalMicrobatchRuleCriteria',
            fields=[
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('field', models.CharField(max_length=100)),
                ('operator', models.CharField(choices=[('equals', 'Equals'), ('contains', 'Contains'), ('starts_with', 'Starts With'), ('ends_with', 'Ends With'), ('gt', 'Greater Than'), ('lt', 'Less Than')], default='equals', max_length=20)),
                ('value', models.CharField(blank=True, max_length=254, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('microbatch_rule', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='microbatching.microbatchrule')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical microbatch rule criteria',
                'verbose_name_plural': 'historical microbatch rule criterias',
                'db_table': 'microbatch_rule_criteria_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMicrobatchRule',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('item_name', models.CharField(max_length=150)),
                ('batch_size', models.IntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='job_manager.workcenter')),
            ],
            options={
                'verbose_name': 'historical microbatch rule',
                'verbose_name_plural': 'historical microbatch rules',
                'db_table': 'microbatch_rule_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMicrobatchFlowStep',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('size', models.IntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('current_rule', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='microbatching.microbatchrule')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('microbatch_flow', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='microbatching.microbatchflow')),
                ('predecessor_rule', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='microbatching.microbatchrule')),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical microbatch flow step',
                'verbose_name_plural': 'historical microbatch flow steps',
                'db_table': 'microbatch_flow_step_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMicrobatchFlow',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('custom_fields', models.JSONField(blank=True, default=dict, null=True)),
                ('external_id', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('work_center', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='job_manager.workcenter')),
            ],
            options={
                'verbose_name': 'historical microbatch flow',
                'verbose_name_plural': 'historical microbatch flows',
                'db_table': 'microbatch_flow_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
