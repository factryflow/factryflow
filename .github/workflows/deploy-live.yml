name: Deploy Live

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter the version (e.g., 1.0.0)'
        required: true
        default: 'latest'

env:
  LOGIN_SERVER: acroeproduction.azurecr.io
  USERNAME: acroeproduction
  IMAGE_NAME: factryflow:${{ github.event.inputs.version }}

jobs:
  run-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Create virtual environment
        run: |
          python -m venv venv
          . venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run migrations (check for migration issues)
        run: |
          source venv/bin/activate
          python src/manage.py migrate
          python src/manage.py sync_roles
        env:
          DJANGO_ENV: development
          DATABASE: sqlite3

      - name: Start the backend (checks if the server starts)
        run: |
          source venv/bin/activate 
          python src/manage.py runserver &
          sleep 10

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest src/ -W ignore
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          API_KEY: ${{ secrets.API_KEY }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: run-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Login to ACR'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.LOGIN_SERVER }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.ACR_TOKEN_PASSWORD }}
      
      - name: 'Build and Push to ACR'
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.prod
          push: true
          context: .  
          tags: ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}

      - name: 'Install Azure CLI'
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  
      - name: 'Login to Azure'
        run: |
          az login --service-principal \
            -u ${{ secrets.SP_CLIENT_ID }} \
            -p ${{ secrets.SP_CLIENT_SECRET }} \
            --tenant ${{ secrets.SP_TENANT_ID }} --output none

      - name: 'Update Web App with New Image'
        run: |
          az webapp config appsettings set \
            --name factryflow \
            --resource-group rg-factryflow \
            --container-image-name ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }} \
            --container-registry-url https://${{ env.LOGIN_SERVER }} \
            --container-registry-user ${{ env.USERNAME }} \
            --container-registry-password ${{ secrets.ACR_TOKEN_PASSWORD }}

      - name: 'Restart Azure Web App'
        run: |
          az webapp restart --name factryflow --resource-group rg-factryflow